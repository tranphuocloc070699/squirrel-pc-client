name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3      

    - name: Login to docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Generate Build Number
      id: build-number
      run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT     
      
    - name: Build and push
      id: build-push-dockerfile
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/squirrel-pc-client:latest

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

    - name: Executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/squirrel-pc-client
            if [ -n "$(docker ps -q -f name=squirrel-pc-client)" ]; then
              docker stop squirrel-pc-client
              docker rm squirrel-pc-client
            fi
            docker compose up -d
      
    - name: Send Telegram message on success
      # if: ${{ steps.check-status.outcome == 'success' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_GROUP_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          <strong >SUCCESS ✅</strong>
          Actor: <strong>${{ github.actor }}</strong>
          Branch: <strong>${{ steps.extract_branch.outputs.branch }}</strong>
          Repository: <strong>${{ github.repository }}</strong>
            
          <a href="https://github.com/${{ github.repository }}/commit/${{github.sha}}"><strong>Open URL</strong></a>
        format: html
        disable_web_page_preview: true

    - name: Send Telegram message on fail
      if: ${{ steps.check-status.outcome == 'failure' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_GROUP_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          <strong >FAILURE ❌</strong>
          Actor: <strong>${{ github.actor }}</strong>
          Branch: <strong>${{ steps.extract_branch.outputs.branch }}</strong>
          Repository: <strong>${{ github.repository }}</strong>
            
          <a href="https://github.com/${{ github.repository }}/commit/${{github.sha}}"><strong>Open URL</strong></a>
        format: html
        disable_web_page_preview: true

          